"use client";

import { useState, useEffect } from "react";
import {
  Card,
  CardContent,
  CardDescription,
  CardHeader,
  CardTitle,
} from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import type { UserProfile } from "@/types/user-profile";
import { Brain, Calendar, Clock, Loader2 } from "lucide-react";
import { FloatingTips } from "@/components/ui/FloatingTips";

interface ScheduleItem {
  day: string;
  time: string;
  subject: string;
  activity: string;
  duration: number;
}

interface StudyPlan {
  schedule: ScheduleItem[];
  tips: string[];
}

export function AdaptiveLearningPath({
  userProfile,
}: {
  userProfile: UserProfile;
}) {
  const [studyPlan, setStudyPlan] = useState<StudyPlan | null>(null);
  const [isGenerating, setIsGenerating] = useState(true);

  useEffect(() => {
    const generatePlan = async () => {
      setIsGenerating(true);
      try {
        const response = await fetch("/api/generate-study-schedule", {
          // We will create this new API route
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({ userProfile }),
        });
        const data = await response.json();
        setStudyPlan(data.plan);
      } catch (error) {
        console.error("Error generating study plan:", error);
      } finally {
        setIsGenerating(false);
      }
    };
    generatePlan();
  }, [userProfile]);

  if (isGenerating) {
    return (
      <Card className="border-0 shadow-xl">
        <CardContent className="flex flex-col items-center justify-center py-12">
          <Loader2 className="h-12 w-12 text-indigo-500 animate-spin mb-4" />
          <h3 className="text-lg font-semibold mb-2">
            AI is building your personalized weekly schedule...
          </h3>
        </CardContent>
      </Card>
    );
  }

  if (!studyPlan) {
    return (
      <Card>
        <CardContent>
          <p className="text-center py-8">
            Could not generate a study plan. Please try again later.
          </p>
        </CardContent>
      </Card>
    );
  }

  const daysOfWeek = [
    "Monday",
    "Tuesday",
    "Wednesday",
    "Thursday",
    "Friday",
    "Saturday",
    "Sunday",
  ];

  return (
    <div className="space-y-6">
      <Card className="border-0 shadow-lg bg-gradient-to-r from-blue-50 to-indigo-50">
        <CardHeader>
          <CardTitle className="flex items-center gap-2">
            <Calendar className="h-6 w-6 text-blue-600" />
            Your Weekly Study Plan
          </CardTitle>
          <CardDescription>
            A personalized timetable generated by AI based on your subjects,
            availability, and learning preferences.
          </CardDescription>
        </CardHeader>
      </Card>

      <div className="grid grid-cols-1 lg:grid-cols-3 xl:grid-cols-4 gap-4">
        {daysOfWeek.map((day) => {
          const daySchedule = studyPlan.schedule.filter(
            (item) => item.day === day
          );
          return (
            <Card key={day} className="flex flex-col">
              <CardHeader className="bg-gray-100">
                <CardTitle className="text-center text-lg">{day}</CardTitle>
              </CardHeader>
              <CardContent className="p-4 space-y-3 flex-grow">
                {daySchedule.length > 0 ? (
                  daySchedule.map((item, index) => (
                    <div key={index} className="p-3 bg-white rounded-lg border">
                      <p className="font-semibold">{item.subject}</p>
                      <p className="text-sm text-gray-700">{item.activity}</p>
                      <div className="flex items-center justify-between text-xs text-gray-500 mt-2">
                        <span>
                          <Clock className="inline h-3 w-3 mr-1" />
                          {item.time}
                        </span>
                        <span>{item.duration} mins</span>
                      </div>
                    </div>
                  ))
                ) : (
                  <p className="text-center text-gray-500 pt-8">Rest Day</p>
                )}
              </CardContent>
            </Card>
          );
        })}
      </div>
      <FloatingTips tips={studyPlan.tips} />
    </div>
  );
}
